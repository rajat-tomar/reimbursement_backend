name: Reimbursement Project
on:
  push:
    branches: [ main ]
jobs:
  build:
    name: Build & Test
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: reimbursement
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      golang:
        image: golang:latest
    steps:
      - uses: actions/checkout@v3
      - name: Install golang-migrate
        run: |
          curl -L https://github.com/golang-migrate/migrate/releases/download/v4.14.1/migrate.linux-amd64.tar.gz | tar xvz
          sudo mv migrate.linux-amd64 /usr/bin/migrate

      - name: Build Project
        run: go build -v .

      - name: Run Migrations
        run: make migrate-up

      - name: Run Tests
        run: go test -v ./...

      - uses: actions/upload-artifact@master
        with:
          name: binary_file
          path: reimbursement_backend

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - uses: actions/download-artifact@v1
        with:
          name: binary_file
          path: .
      - name: Add SSH Key To Runner
        env:
#          REIMBURSEMENT_PUBLIC_KEY: ${{secrets.REIMBURSEMENT_PUBLIC_KEY}}
          REIMBURSEMENT_PRIVATE_KEY: ${{secrets.REIMBURSEMENT_PRIVATE_KEY}}
#          SSH_HOST: ${{secrets.SSH_HOST}}
        run: |
          mkdir ~/.ssh
#          echo $SSH_PUBLIC > ~/.ssh/id_rsa.pub
          echo "${{secrets.REIMBURSEMENT_PRIVATE_KEY}}" > ~/.ssh/id_rsa
#          echo $SSH_HOST > ~/.ssh/known_hosts
          chmod 600 ~/.ssh/id_rsa
      - name: Create config.yml file
        run: |
          touch config.yml
          echo "DATABASE:" >> config.yml
          echo "  USER: ${{secrets.DB_USER}}" >> config.yml
          echo "  DB_NAME: ${{secrets.DB_NAME}}" >> config.yml
          echo "  HOST: ${{secrets.DB_HOST}}" >> config.yml
          echo "  PASSWORD: ${{secrets.DB_PASSWORD}}" >> config.yml
          echo "  PORT: ${{secrets.DB_PORT}}" >> config.yml
          echo "LOG:" >> config.yml
          echo "  LEVEL: ${{secrets.LOG_LEVEL}}" >> config.yml
      - name: Remove previous binary and config.yml file from remote instance
        run: ssh -o StrictHostKeyChecking=no reimbursement@34.131.14.74 "rm -rf config.yml;rm -rf reimbursement_backend;"
      - name: Kill the process
        continue-on-error: true
        run: ssh -o StrictHostKeyChecking=no reimbursement@34.131.14.74 "kill \$(lsof -t -i:80)"
      - name: Move Binary to Remote Instance
        run: scp -o StrictHostKeyChecking=no reimbursement_backend reimbursement@34.131.14.74:/home/reimbursement/reimbursement_backend
      - name: Move config.yml File to Remote
        run: scp -o StrictHostKeyChecking=no config.yml reimbursement@34.131.14.74:/home/reimbursement/config.yml
      - name: Change file access mode
        run: ssh -o StrictHostKeyChecking=no reimbursement@34.131.14.74 "chmod +x reimbursement_backend;chmod +x config.yml;"
      - name: Run the binary
        run: ssh -o StrictHostKeyChecking=no reimbursement@34.131.14.74 "./reimbursement_backend &"